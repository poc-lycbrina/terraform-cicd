name: Terraform destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:
  destroy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Print selected environment
        run: |
          echo "Running for environment: ${{ github.event.inputs.environment }}"

      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
          aws-region: ap-southeast-7
    
      - name: Terraform Init
        run: terraform init -backend-config=backend.${{ github.event.inputs.environment }}.hcl -backend-config="key=state/${{ github.repository }}-terraform.tfstate"

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Load secrets from AWS Secrets Manager
        id: secrets
        run: |
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id arn:aws:secretsmanager:ap-southeast-7:140023376669:secret:test-4YV1Ej \
            --query SecretString \
            --output text)

          # Parse each key into TF_VAR_ environment variables
          echo "$SECRET_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while IFS='=' read -r key value; do
            echo "::add-mask::$value"                     
            echo "TF_VAR_$key=$value" >> "$GITHUB_ENV"    
          done

      - name: Terraform Plan
        run: terraform plan -var-file=terraform.${{ github.event.inputs.environment }}.tfvars -destroy

      - name: Terraform Destroy
        run: terraform apply -destroy -auto-approve
        

  unlock-state:
    runs-on: ubuntu-latest
    if: always()  # <-- This ensures it runs even if terraform job fails
    needs: destroy
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
          aws-region: ap-southeast-7

      - name: Remove Terraform Lock
        env:
          AWS_REGION: ap-southeast-7
        run: |
          LOCK_ID="terraform-state-140023376669/state/${{ github.repository }}-terraform.tfstate.tflock"

          echo "Checking for lock ID: $LOCK_ID in $TABLE_NAME"
          aws s3 rm s3://$LOCK_ID \
            --region "$AWS_REGION" \
            || echo "No lock found or already removed"