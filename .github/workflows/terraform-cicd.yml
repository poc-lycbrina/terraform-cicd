name: Terraform CI/CD Entry Point

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - uat
          - prod
      workflow:
        description: "Select workflow to run"
        required: true
        type: choice
        options:
          - unlock-state
          - destroy-terraform 

jobs:      
  # PR to DEV branch
  pr-dev:
    if: github.event_name == 'pull_request' && github.base_ref == 'dev'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      opa_check: true
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Push to DEV
  push-dev-plan:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      backend_config: backend.dev.hcl
      apply: true
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # push-dev-approval:
  #   needs: push-dev-plan
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: dev
  #     url: https://dev.example.com
  #   steps:
  #     - run: echo "Manual approval for dev"

  push-dev-apply:
    needs: push-dev-plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      apply: true
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # PR from DEV to MAIN
  pr-main-uat:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      opa_check: true
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  pr-main-prod:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      opa_check: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Push to MAIN (merge)
  main-uat-plan:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # main-uat-approval:
  #   needs: main-uat-plan
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   environment: uat
  #   steps:
  #     - run: echo "Manual UAT approval"

  main-uat-apply:
    needs: main-uat-plan
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      apply: true
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  main-prod-plan:
    needs: main-uat-apply
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # main-prod-approval:
  #   needs: main-prod-plan
  #   runs-on: ubuntu-latest
  #   environment: prod
  #   steps:
  #     - run: echo "Manual PROD approval"

  main-prod-apply:
    needs: main-prod-plan
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      apply: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7


  # Destroy plan for DEV
  destroy-plan-dev:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'  && github.event.inputs.workflow == 'destroy-terraform'
    uses: ./.github/workflows/terraform-destroy.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Unlock plan for DEV
  unlock-state-dev:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'  && github.event.inputs.workflow == 'destroy-terraform'
    uses: ./.github/workflows/terraform-state-unlock.yml
    with:
      environment: dev
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7
      STATE_S3_BUCKET: terraform-state-140023376669