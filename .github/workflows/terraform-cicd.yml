name: Terraform CI/CD Entry Point

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

  workflow_dispatch:
    inputs:
      workflow:
        description: "Select workflow to run"
        required: true
        type: choice
        options:
          - unlock-state
          - destroy-terraform 
      environment:
        description: "Select environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:      

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-dev: ${{ steps.changes.outputs.changed-dev }}
      changed-uat: ${{ steps.changes.outputs.changed-uat }}
      changed-prod: ${{ steps.changes.outputs.changed-prod }}
      trigger-all: ${{ steps.changes.outputs.trigger-all }}
      trigger-prod: ${{ steps.changes.outputs.trigger-prod }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: changes
        run: |
          # Determine base ref depending on event type
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_REF="origin/${{ github.event.pull_request.base.ref }}"
          else
            BASE_REF="${{ github.event.before }}"
          fi

          # Fetch and compute changed files
          git fetch origin --depth=50 || true
          CHANGED=$(git diff --name-only "$BASE_REF"...HEAD)

          echo "Changed files:"
          echo "$CHANGED"

          # Set outputs based on paths
          echo "$CHANGED" | grep 'dev' >/dev/null && echo "changed-dev=true" >> "$GITHUB_OUTPUT" || echo "changed-dev=false" >> "$GITHUB_OUTPUT"
          echo "$CHANGED" | grep 'uat' >/dev/null && echo "changed-uat=true" >> "$GITHUB_OUTPUT" || echo "changed-uat=false" >> "$GITHUB_OUTPUT"
          echo "$CHANGED" | grep 'prod' >/dev/null && echo "changed-prod=true" >> "$GITHUB_OUTPUT" || echo "changed-prod=false" >> "$GITHUB_OUTPUT"

          # Check if shared files changed
          if echo "$CHANGED" | grep -Ev 'dev|uat|prod' | grep -q '.'; then
            echo "trigger-all=true" >> "$GITHUB_OUTPUT"
          else
            echo "trigger-all=false" >> "$GITHUB_OUTPUT"
          fi

          # Check if commit is a merge commit with title starting with "PROD-CR"
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          if echo "$COMMIT_MSG" | grep -q "Merge pull request"; then
            if echo "$COMMIT_MSG" | grep -q "PROD-CR"; then
              echo "✅ PR title starts with PROD-CR"
              echo "trigger-prod=true" >> "$GITHUB_OUTPUT"
            else
              echo "❌ PR title does not start with PROD-CR"
              echo "trigger-prod=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "❌ Not a PR merge commit"
            echo "trigger-prod=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Print outputs
        run: |
          echo "Changed DEV: ${{ steps.changes.outputs.changed-dev }}"
          echo "Changed UAT: ${{ steps.changes.outputs.changed-uat }}"
          echo "Changed PROD: ${{ steps.changes.outputs.changed-prod }}"
          echo "Trigger All: ${{ steps.changes.outputs.trigger-all }}"

  test:
    runs-on: ubuntu-latest
    if: always()
    needs: detect-changes
    steps:
      - name: Print evaluated condition
        run: |
          echo ${{github.event_name}}
          echo ${{github.base_ref}}
          echo ${{needs.detect-changes.outputs.changed-dev}}
          echo ${{needs.detect-changes.outputs.trigger-all}}
          echo "Evaluated: ${{ github.event_name == 'pull_request' && github.base_ref == 'dev' && (needs.detect-changes.outputs.changed-dev == 'true' || needs.detect-changes.outputs.trigger-all == 'true') }}"

  # PR to DEV branch
  pr-dev:
    needs: detect-changes
    if: github.event_name == 'pull_request' && github.base_ref == 'dev' && (needs.detect-changes.outputs.changed-dev == 'true' || needs.detect-changes.outputs.trigger-all == 'true')

    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      opa_check: true
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Push to DEV
  push-dev-plan:
    needs: detect-changes
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/dev' 
      && (needs.detect-changes.outputs.changed-dev == 'true' || needs.detect-changes.outputs.trigger-all == 'true')
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      backend_config: backend.dev.hcl
      apply: true
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  push-dev-apply:
    needs: push-dev-plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      apply: true
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # PR from DEV to MAIN
  pr-main-uat:
    needs: detect-changes
    if: |
      github.event_name == 'pull_request' && github.base_ref == 'main'
      && (needs.detect-changes.outputs.changed-uat == 'true' || needs.detect-changes.outputs.trigger-all == 'true')    
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      opa_check: true
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  pr-main-prod:
    needs: detect-changes
    if: |
      github.event_name == 'pull_request' && github.base_ref == 'main'
      && (needs.detect-changes.outputs.changed-prod == 'true' || needs.detect-changes.outputs.trigger-all == 'true')  
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      opa_check: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Push to MAIN (merge)
  main-uat-plan:
    needs: detect-changes
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main'
      && (needs.detect-changes.outputs.changed-uat == 'true' || needs.detect-changes.outputs.trigger-all == 'true')    
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      apply: true
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  main-uat-apply:
    needs: main-uat-plan
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      apply: true
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  main-prod-plan:
    needs: main-uat-apply
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main'
      && (needs.detect-changes.outputs.changed-prod == 'true' || needs.detect-changes.outputs.trigger-all == 'true') 
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      apply: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # CR for PROD
  cr-prod-plan:
    needs: detect-changes
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main'
      && (needs.detect-changes.outputs.trigger-prod == 'true') 
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      apply: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  prod-apply:
    needs: [main-prod-plan, cr-prod-plan]
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      apply: true
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7


  # Destroy plan for DEV
  destroy-plan-dev:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'  && github.event.inputs.workflow == 'destroy-terraform'
    uses: ./.github/workflows/terraform-destroy.yml
    with:
      environment: dev
      tfvars: terraform.dev.tfvars
      backend_config: backend.dev.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Destroy plan for UAT
  destroy-plan-uat:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'uat'  && github.event.inputs.workflow == 'destroy-terraform'
    uses: ./.github/workflows/terraform-destroy.yml
    with:
      environment: uat
      tfvars: terraform.uat.tfvars
      backend_config: backend.uat.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Destroy plan for PROD
  destroy-plan-prod:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'  && github.event.inputs.workflow == 'destroy-terraform'
    uses: ./.github/workflows/terraform-destroy.yml
    with:
      environment: prod
      tfvars: terraform.prod.tfvars
      backend_config: backend.prod.hcl
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7

  # Unlock plan for DEV
  unlock-state-dev:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'  && github.event.inputs.workflow == 'unlock-state'
    uses: ./.github/workflows/terraform-state-unlock.yml
    with:
      environment: dev
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7
      STATE_S3_BUCKET: terraform-state-140023376669

  # Unlock plan for UAT
  unlock-state-uat:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'uat'  && github.event.inputs.workflow == 'unlock-state'
    uses: ./.github/workflows/terraform-state-unlock.yml
    with:
      environment: uat
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7
      STATE_S3_BUCKET: terraform-state-140023376669

  # Unlock plan for PROD
  unlock-state-prod:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'  && github.event.inputs.workflow == 'unlock-state'
    uses: ./.github/workflows/terraform-state-unlock.yml
    with:
      environment: prod
      IAM_OIDC_ROLE: arn:aws:iam::140023376669:role/cmrs-DEV-TH-custom-GithubOIDCRole
      REGION: ap-southeast-7
      STATE_S3_BUCKET: terraform-state-140023376669